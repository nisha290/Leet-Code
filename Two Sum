QUESTION:
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

 

Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Output: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1]


SOLUTION :

import java.util.Scanner; 
import java.util.Arrays;
public class Solution 
{ 
    public int[] twoSum(int[] numbers, int value)
    {
        int length= numbers.length;
        int[] output=new int[2];
        for(int i=0;i<length-1;i++)
        {
            for(int j=0;j<length;j++)
            {
                 if(i!=j)
                 {
                    if(numbers[i]+numbers[j]==value)
                    {
                        output[0]=i;
                        output[1]=j;
                    }
                 }
            }
        }
        return output;
    }

public static void main(String[] args)
    {
        int n,target;
        Scanner sc=new Scanner(System.in);  
        System.out.print("Enter the number of elements: ");  
        n=sc.nextInt();  
        int[] num= new int[n];
        System.out.println("Enter the number inputs : ");
        for(int x=0;x<n;x++)
        {
            num[x]=sc.nextInt(); 
        }
        System.out.println("Enter the target: ");
        target=sc.nextInt();
        Solution s=new Solution();
        int[] result=s.twoSum(num,target);
        System.out.println(Arrays.toString(result));
    }
}
